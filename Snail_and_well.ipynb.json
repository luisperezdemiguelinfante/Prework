{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Snail just dropped\n",
      "Climbing 12.5 days Snail will be free\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "Snail is free\n"
     ]
    }
   ],
   "source": [
    "well_height = 125\n",
    "daily_distance = 30\n",
    "nightly_distance = -20\n",
    "snail_position = daily_distance + nightly_distance\n",
    "total_position = 0\n",
    "\n",
    "\n",
    "print(\"Snail just dropped\")\n",
    "total_position += snail_position\n",
    "\n",
    "number_days = well_height/snail_position\n",
    "print (\"Climbing\", number_days, \"days\", \"Snail will be free\")\n",
    "\n",
    "\n",
    "while total_position < well_height:\n",
    "    print(\"snail is climbing the well\")\n",
    "    total_position += snail_position\n",
    "    \n",
    "\n",
    "print (\"Snail is free\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "range(10, 125)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "range (snail_position, well_height)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n",
      "11\n",
      "12\n"
     ]
    }
   ],
   "source": [
    "for i in range (1, 13):\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n"
     ]
    }
   ],
   "source": [
    "days_passed = []\n",
    "\n",
    "for i in range (0, 13):\n",
    "    sumar = i+1\n",
    "    days_passed.append(sumar)\n",
    "\n",
    "print (days_passed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 Day Snail is climbing the well\n",
      "3 Day Snail is climbing the well\n",
      "4 Day Snail is climbing the well\n",
      "5 Day Snail is climbing the well\n",
      "6 Day Snail is climbing the well\n",
      "7 Day Snail is climbing the well\n",
      "8 Day Snail is climbing the well\n",
      "9 Day Snail is climbing the well\n",
      "10 Day Snail is climbing the well\n",
      "11 Day Snail is climbing the well\n",
      "12 Day Snail is climbing the well\n"
     ]
    }
   ],
   "source": [
    "num_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n",
    "\n",
    "total = 0\n",
    "\n",
    "for i in num_list:\n",
    "    total = i+1\n",
    "    print(total, \"Day\", \"Snail is climbing the well\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Snail just dropped\n",
      "Climbing 12.5 days Snail will be free\n",
      "2 Day Snail is climbing the well\n",
      "3 Day Snail is climbing the well\n",
      "4 Day Snail is climbing the well\n",
      "5 Day Snail is climbing the well\n",
      "6 Day Snail is climbing the well\n",
      "7 Day Snail is climbing the well\n",
      "8 Day Snail is climbing the well\n",
      "9 Day Snail is climbing the well\n",
      "10 Day Snail is climbing the well\n",
      "11 Day Snail is climbing the well\n",
      "12 Day Snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "snail is climbing the well\n",
      "Snail is free\n"
     ]
    }
   ],
   "source": [
    "well_height = 125\n",
    "daily_distance = 30\n",
    "nightly_distance = -20\n",
    "snail_position = daily_distance + nightly_distance\n",
    "total_position = 0\n",
    "\n",
    "\n",
    "print(\"Snail just dropped\")\n",
    "total_position += snail_position\n",
    "\n",
    "number_days = well_height/snail_position\n",
    "print (\"Climbing\", number_days, \"days\", \"Snail will be free\")\n",
    "\n",
    "num_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n",
    "\n",
    "total = 0\n",
    "\n",
    "for i in num_list:\n",
    "    total = i+1\n",
    "    print(total, \"Day\", \"Snail is climbing the well\")\n",
    "\n",
    "while total_position < well_height:\n",
    "    print(\"snail is climbing the well\")\n",
    "    total_position += snail_position\n",
    "    \n",
    "\n",
    "print (\"Snail is free\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Snail just dropped\n",
      "Climbing 12.5 days Snail will be free\n",
      "2 Day Snail is climbing the well\n",
      "3 Day Snail is climbing the well\n",
      "4 Day Snail is climbing the well\n",
      "5 Day Snail is climbing the well\n",
      "6 Day Snail is climbing the well\n",
      "7 Day Snail is climbing the well\n",
      "8 Day Snail is climbing the well\n",
      "9 Day Snail is climbing the well\n",
      "10 Day Snail is climbing the well\n",
      "11 Day Snail is climbing the well\n",
      "12 Day Snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "12 snail is climbing the well\n",
      "Snail is free\n"
     ]
    }
   ],
   "source": [
    "well_height = 125\n",
    "daily_distance = 30\n",
    "nightly_distance = -20\n",
    "snail_position = daily_distance + nightly_distance\n",
    "total_position = 0\n",
    "\n",
    "\n",
    "print(\"Snail just dropped\")\n",
    "total_position += snail_position\n",
    "\n",
    "number_days = well_height/snail_position\n",
    "print (\"Climbing\", number_days, \"days\", \"Snail will be free\")\n",
    "\n",
    "num_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n",
    "\n",
    "total = 0\n",
    "\n",
    "for i in num_list:\n",
    "    total = i+1\n",
    "    print(total, \"Day\", \"Snail is climbing the well\")\n",
    "\n",
    "while total_position < well_height:\n",
    "    print(total, \"snail is climbing the well\")\n",
    "    total_position += snail_position\n",
    "    \n",
    "\n",
    "print (\"Snail is free\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
